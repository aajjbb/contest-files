#include <stdio.h>

const int MAXN = 1010;

vector<int> graph[MAXN];
int dist[MAXN];

int flow[MAXN][MAXN];
int capa[MAXN][MAXN];

void add_edge(int f, int t, int c) {
  graph[f].push_back(make_pair(t, c));
  graph[t].push_back(make_pair(f, 0));  
}

bool bfs(void) {
  int qh = 0;
  int qt = 0;

  q[qt++] = s;

  memset(d, -1, sizeof(d));

  d[s] = 0;

  int i;

  while (qh < qt) {
    int v = q[qh++];
    
    for (i = 0; i < (int) graph[i].size(); i++) {
      int to = graph[v][i].first;
      if (d[to] == -1 && f[v][to] < c[v][to]) {
        q[qt++] = to;
        d[to] = d[v] + 1;
      }
  }
  return d[t] != -1;
}
